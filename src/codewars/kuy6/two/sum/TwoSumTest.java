package two.sum;

import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class TwoSumTest {
    private static final int[] NUMBERS_1 = {-423, 168, 112, 808, -103, 61, -352, 767, -729, 680, 700, 278, 958, -487, 1,
            -440, 685, 561, 310, -575, -187, 524, -468, 523, -670, -774, 557, 304, -941, -8, 528, 828, 152, 326, 610,
            507, 831, -411, 320, 969, -638, 591, 164, 202, 591, 763, 347, 841, 668, 483, 96, -428, 41, -712, 402, -842,
            368, 8, 288, 262, 852, -181, -919, 322, 48, -665, -135, 340, -597, 149, -255, -786, 355, -218, -217, 355,
            628, 35, 393, -323, -468, 329, 662, -46, -229, -205, 570, 778, 857, -556, -668, -177, 592, -84, -337, -162,
            -82, -212, -716, -5, -72, 390, 535, 803, 151, 588, 949, -733, 261, 971, 707, 725, 917, -40, -229, -453,
            351, -763, 430, -782, -39, 440, 372, -78, 307, 361, 73, -12, 989, -487, -58, 763, -329, 700, -484, -749,
            -601, -384, -915, 309, -127, -348, -94, -949, -689, 379, -276, -62, 493, 920, 964, 277, -197, 668, 126,
            -800, 664, 93, -236, 425, -416, -158, -703, -97, 2, -750, 531, 157, -733, -602, -293, -694, 466, -720,
            -753, 611, -451, 586, -695, -342, 380, -648, 835, 322, 149, 889, 852, 642, -11, -464, -902, -498, -90,
            702, -178, -369, 449, 974, -363, -23, 190, 208, -43, 790, 273, 63, -427, 707, 24, -33, -942, 461, -534,
            -8, -544, -261, -401, -49, -832, 22, 534, -408, -274, 533, 968, -53, 161, -475, 898, -225, 86, 456,
            -385, -795, -58, -447, 458, -437, -570, 256, 539, -886, -199, -955, 432, 810, 587, 382, 309, -52, 859,
            137, -405, 275, 841, 687, -389, 267, 630, -499, 608, -431, -374, 338, 656, 236, 322, 120, 0, 641, -492,
            -970, -587, 752, -532, -373, 658, -262, 609, -576, 232, -406, 399, 615, 950, -479, 527, -634, -240, -172,
            -22, 374, 27, 250, 632, -979, 422, -344, -67, 523, 108, 869, 523, -899, 383, 344, 40, 944, 61, 638, -562,
            987, 691, -891, -742, 170, -797, -158, 855, -218, 103, 27, 390, 534, 949, 731, 148, -774, 342, -525, 932,
            -289, -370, 367, -166, 92, -921, 133, -18, 223, 915, 923, -862, -674, 520, 204, 159, -265, 34, 830, 97,
            -110, 418, 179, 557, 574, 663, -962, -252, 860, 467, 437, -112, -622, 914, -90, 254, -257, 122, -3, -107,
            -756, -67, 474, -540, -266, 26, 627, -62, 762, -369, 48, -436, 464, 635, -717, -275, -903, -116, -734,
            470, 770, 400, -645, 523, 956, -563, 355, 106, -409, -5, -913, -457, 730, -103, 680, 407, -616, 148,
            -672, -158, -580, 279, 59, -118, 572, -371, -126, -378, -399, 70, -193, 684, 92, 450, -276, -951, -610,
            992, 501, 685, -533, -830, 543, 878, -633, 497, 611, -202, -458, 606, -747, 603, -354, -176, 458, 608,
            526, 571, 953, -944, 73, -251, -500, -281, 122, 792, -678, 209, 446, 883, 542, 749, 237, -257, -963, 999,
            907, 770, -678, -754, 67, -63, 803, 160, -86, -552, -843, -750, -865, -655, -451, 440, -718, 512, -481,
            318, -525, -616, 74, -303, 525, 81, -825, -13, 410, -511, -279, -422, -608, -645, -288, -133, -909, 280,
            -999, 357, 808, -144, -474, 920, -238, -684, -245, -894, -563, -988, -290, -672, 984, -289, 220, -572,
            760, 755, -688, 304, 875, 525, -295, -884, -60, 205, 506, -814, -300, 271, -351, -641, 229, -88, 929,
            -182, -60, 508, 982, 36, 940, -249, 60, 199, -864, 513, 58, 859, 574, 545, 112, 717, 50, 107, 167, 402,
            -512, -50, 701, -824, -66, 460, 394, -536, -402, 72, -759, -449, 166, 930, 989, 466, -929, -462, -565,
            890, 863, 473, -378, 658, -560, -728, -382, -767, -602, 92, 58, -442, -792, 450, 208, 904, -194, -836,
            -834, 797, -372, -498, 143, -632, -468, -855, 931, -802, -20, 540, 868, 24, -670, -3, -468, 273, 131,
            366, 739, -551, 100, -497, 800, 67, -966, 503, -988, 664, 489, -112, 206, -567, -837, 631, 549, -802,
            -609, -450, -466, 841, 773, -304, 986, -332, 623, -735, -775, -978, 182, -470, 36, -904, -679, -678,
            -540, 96, 995, -291, -276, -740, -234, 882, 532, 536, -799, -763, 385, 344, 623, -302, -901, 713,
            461, 638, 539, 144, 361, 257, -556, 165, -741, 150, 402, 551, 687, 488, -407, 261, 387, 37, 243, 949,
            -842, 769, -973, -92, -227, 362, -659, -114, 592, 570, 849, 39, 742, 643, -413, 552, 486, -274, 541,
            -510, 629, 776, 889, 265, 348, -434, -162, -360, -859, -261, 652, 445, -512, -592, -488, -485, 710, 236};
    private static final int[] NUMBERS_2 = {-283, 308, 414, -69, -510, 767, 725, -848, 521, 128, 774, 211, 329, 751,
            -590, -384, 173, -794, 794, 72, -70, -282, -94, -868, 244, 354, -908, -616, 484, -811, -292, -998, 764,
            -351, 640, -826, 681, 126, -817, -818, 528, 478, 690, 842, -79, -6, 236, -896, -382, 337, -674, -319, 145,
            -211, 307, 989, 532, 796, 26, -512, -410};
    @Test
    public void twoSum() {
        assertArrayEquals(new int[] {0, 2}, TwoSum.twoSum(new int[] {1, 2, 3}, 4));
        assertArrayEquals(new int[] {1, 2}, TwoSum.twoSum(new int[] {1234, 5678, 9012}, 14690));
        assertArrayEquals(new int[] {0, 1}, TwoSum.twoSum(new int[] {2, 2, 3}, 4));
        assertArrayEquals(new int[] {2, 161}, TwoSum.twoSum(NUMBERS_1, -46));
        assertArrayEquals(new int[] {0, 103}, TwoSum.twoSum(NUMBERS_1, 380));
    }
}